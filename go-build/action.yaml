name: go-build
description: Build a Go application into a container image using ko

inputs:
  image-uri:
    description: 'The URI of the resulting image (e.g. registry/repo/image-name, no tags.'
    required: true
  go-version:
    description: 'The version of Go to be used during build. Defaults to "1.25.0".'
    required: false
    default: '1.25.0'
  release-version:
    description: 'Image release version (aka tag) to set.'
    required: true
  main-path:
    description: 'Build entry path relative to the root of the repo. Default to main.go.'
    required: false
    default: 'main.go'
  registry-username:
    description: '(optional) Registry username. Defaults to the GitHub actor.'
    required: false
    default: ${{ github.actor }}
  registry-password:
    description: '(required) Registry password.'
    required: true

outputs:
  image-uri:
    description: 'Fully qualified image URI after build (includes digest)'
    value: ${{ steps.image.outputs.uri }}
  image-digest:
    description: 'Image digest after build'
    value: ${{ steps.image.outputs.digest }}
  image-name:
    description: 'Image name (no digest or tag)'
    value: ${{ steps.image.outputs.name }}
  image-tag:
    description: 'Image tag used for the build (e.g. v1.0.0)'
    value: ${{ inputs.release-version }}

runs:
  using: "composite"

  steps:

  # Setup Environment
  - name: Checkout Code
    uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
  - name: Setup Go
    uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.5.0
    with:
      go-version: '${{ inputs.go-version }}'
      cache: true
      cache-dependency-path: |
        go.sum
        **/go.sum

  # Unit Tests
  - name: Tidy Modules
    shell: bash
    run: |
      go version
      go mod tidy
  - name: Unit Test
    shell: bash
    run: |
      go test -count=1 -covermode=atomic -coverprofile=coverage.out ./...

  - name: Install ko
    uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d  # v0.9

  - name: Authenticate ko
    shell: bash
    run: |
      ko login ghcr.io -u ${{ inputs.registry-username }} -p ${{ inputs.registry-password }}

  - name: Build Image
    shell: bash
    id: image
    env:
      KO_DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/${{ inputs.image-uri }}
    run: |
      set -euo pipefail
      ko build ${{ inputs.main-path }} \
        --image-refs .uri \
        --bare \
        --tags latest \
        --tags ${{ inputs.release-version }}
      echo "uri=$(cat .uri)" >> "$GITHUB_OUTPUT"
      echo "digest=$(cat .uri | sed 's/.*@//')" >> "$GITHUB_OUTPUT"
      echo "name=$(cat .uri | sed 's/[:@].*//')" >> "$GITHUB_OUTPUT"
