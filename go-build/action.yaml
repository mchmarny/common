name: go-build
description: Build a Go application into a container image using ko.

inputs:
  image-uri:
    description: 'The URI of the resulting image (e.g. registry/repo/image-name, no tags.'
    required: true
  go-version:
    description: 'The version of Go to be used during build. Defaults to "1.25.0".'
    required: false
    default: '1.25.0'
  release-version:
    description: 'Image release version (aka tag) to set.'
    required: true
  main-path:
    description: 'Build entry path relative to the root of the repo. Default to main.go.'
    required: false
    default: 'main.go'
  platforms:
    description: 'Comma-separated list of target platforms for the build. Defaults to "linux/amd64,linux/arm64".'
    required: false
    default: 'linux/amd64,linux/arm64'
  image-base:
    description: 'Base image to use for the build. Defaults to "cgr.dev/chainguard/static:latest".'
    required: false
    default: 'cgr.dev/chainguard/static:latest'
  registry-username:
    description: '(optional) Registry username. Defaults to the GitHub actor.'
    required: false
    default: ${{ github.actor }}
  registry-password:
    description: '(required) Registry password.'
    required: true

outputs:
  image-uri:
    description: 'Fully qualified image URI after build (includes digest)'
    value: ${{ steps.image.outputs.uri }}
  image-digest:
    description: 'Image digest after build'
    value: ${{ steps.image.outputs.digest }}
  image-name:
    description: 'Image name (no digest or tag)'
    value: ${{ steps.image.outputs.name }}
  image-tag:
    description: 'Image tag used for the build (e.g. v1.0.0)'
    value: ${{ inputs.release-version }}

runs:
  using: "composite"

  steps:

  # Setup Environment
  - name: Checkout Code
    uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
  - name: Setup Go
    uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00  # v6.0.0
    with:
      go-version: '${{ inputs.go-version }}'
      cache: true
      cache-dependency-path: |
        go.sum
        **/go.sum

  # Unit Tests
  - name: Tidy Modules
    shell: bash
    run: |
      go version
      go mod tidy
  - name: Unit Test
    shell: bash
    run: |
      go test -count=1 -covermode=atomic -coverprofile=coverage.out ./...

  - name: Install ko
    uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d  # v0.9

  - name: Install crane
    uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e  # v0.4

  - name: Authenticate
    shell: bash
    run: |
      echo ${{ inputs.registry-password }} | ko login ghcr.io -u ${{ inputs.registry-username }} --password-stdin
      echo ${{ inputs.registry-password }} | crane auth login ghcr.io -u ${{ inputs.registry-username }} --password-stdin

  - name: Build Image
    shell: bash
    id: image
    env:
      KO_DOCKER_REPO: ${{ inputs.image-uri }}
      KO_DEFAULTBASEIMAGE: ${{ inputs.image-base }}
    run: |
      set -euo pipefail
      ko build ${{ inputs.main-path }} \
        --platform ${{ inputs.platforms }} \
        --image-refs .refs \
        --bare \
        --tags latest \
        --tags ${{ inputs.release-version }}
      cat .refs
      DIGEST="$(crane digest ${{ inputs.image-uri }}:${{ inputs.release-version }})"
      echo "uri=${{ inputs.image-uri }}:${{ inputs.release-version }}@$DIGEST" >> "$GITHUB_OUTPUT"
      echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"
      echo "name=${{ inputs.image-uri }}" >> "$GITHUB_OUTPUT"

  - name: Attest
    uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
    id: attest
    with:
      subject-name: ${{ steps.image.outputs.name }}
      subject-digest: ${{ steps.image.outputs.digest }}
      push-to-registry: true